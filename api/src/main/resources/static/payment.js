// PortOne SDK Ï¥àÍ∏∞Ìôî
const getPortOne = window.PortOne || null;


if (!getPortOne) {
    console.error('PortOne SDKÍ∞Ä Î°úÎìúÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.');
}

    // KG Í≤∞Ï†ú Ïãú ÌïÑÏöîÌïú Í≥†Í∞ù Ï†ïÎ≥¥
    customer = {
        customerId: 'cid-' + "id01",
        fullName : "song",
        phoneNumber : "010-9757-9002",
        email : "gkrba1234@gmail.com",
    }

    // KG payment ÌååÎùºÎØ∏ÌÑ∞
    const paymentKG = {
      storeId: "store-e19395f7-b747-4b49-b4ef-c8ab3c0ea19b",
      paymentId: "paymentId_25",
      orderName: "ÎÇòÏù¥ÌÇ§ ÏôÄÌîå Ìä∏Î†àÏù¥ÎÑà 2 SD",
      totalAmount: 1000,
      currency: "CURRENCY_KRW",
      channelKey: "channel-key-0387c126-edc9-412e-9f3f-df56eb06ae00",
      payMethod: "CARD",
      customer : customer
    }

    // ÌÜ†Ïä§ payment ÌååÎùºÎØ∏ÌÑ∞
    const paymentToss = {
      storeId: "store-e19395f7-b747-4b49-b4ef-c8ab3c0ea19b",
      paymentId: "paymentId_02",
      orderName: "paymentId_02Ïùò ÏÉÅÌíà",
      totalAmount: 1000,
      currency: "KRW",
      channelKey: "channel-key-2192d557-5254-49d6-8ad9-a7516f3918c0",
      payMethod: "CARD",
    }


// Í≤∞Ï†ú ÏöîÏ≤≠ Ìï®Ïàò
async function requestPayment() {
    try {
        const response = await getPortOne.requestPayment(paymentKG);

        // Ïò§Î•ò Î∞úÏÉù
        if (response.code !== undefined) {
            return alert(response.message);
        }

        console.log('response', response);


        const orderRequest = {
          userId: 1,
          paymentUid: response.txId,
          orderProducts: [
            {
              orderProductId: 101,
              quantity: 1,
              paymentPrice: 1000,
            },
          ],
          totalAmount: paymentKG.totalAmount,
        };

        const order = await fetch("http://localhost:8080/api/v2/orders", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(orderRequest),
            })
            .then((data) => {
               console.log("Order created successfully:", data);
              })
            .catch((error) => {
               console.error("Error creating order:", error);
            });

        /*
        const notified = await fetch(`http://localhost:8080/api/v2/payment/callback`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                paymentId: paymentId,
            }),
        });
        */
    } catch (error) {
        console.error('Í≤∞Ï†ú ÏöîÏ≤≠Ïóê ÎåÄÌïú ÏóêÎü¨ Î∞úÏÉù ‚ÄºÔ∏è', error);
        alert('Í≤∞Ï†ú ÏöîÏ≤≠ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');
    }
}

const cancelPaymentId = "paymentId_03"
async function cancelPayment(paymentId) {
    const url = `https://api.portone.io/payments/${cancelPaymentId}/cancel`; // ÏöîÏ≤≠ URL

    try {
        const response = await fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization' : 'PortOne jTqKFB9HcmesG6uS013OVpp9y9SEROkQvQdeiN2quPetO5NRAg4ZJZ2NePlxMmJdNbr9xEY9lhWIvMg8'
            },
            body: JSON.stringify({
                'reason' : "reason"
            }),
        });

        if (!response.ok) {
            const errorData = await response.json();
            console.error('Í≤∞Ï†ú Ï∑®ÏÜåÏóê ÎåÄÌïú ÏóêÎü¨ Î∞úÏÉù ‚ÄºÔ∏è', errorData);
            return alert(`Í≤∞Ï†ú Ï∑®ÏÜå Ïã§Ìå®: ${errorData.message}`);
        }

        const result = await response.json();
        console.log('Í≤∞Ï†ú Ï∑®ÏÜå ÏÑ±Í≥µ üí°', result);
        alert('Í≤∞Ï†ú Ï∑®ÏÜå ÏÑ±Í≥µ!');
    } catch (error) {
        console.error('ÏöîÏ≤≠ Ï§ë Ïò§Î•ò Î∞úÏÉù ‚ÄºÔ∏è', error);
        alert('Í≤∞Ï†ú Ï∑®ÏÜå ÏöîÏ≤≠ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');
    }
}


// DOM Î°úÎìú ÌõÑ ÏûëÏóÖ
document.addEventListener('DOMContentLoaded', async () => {
    const payButton = document.getElementById('pay-button');
    const payCancelButton = document.getElementById('pay-cancel-button');

    if (payButton) {
        // Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ï∂îÍ∞Ä
        payButton.addEventListener('click', () => {
            requestPayment()
        });
    } else {
        console.error('pay-button ÏöîÏÜåÎ•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.');
    }

    if(payCancelButton){
        payCancelButton.addEventListener('click', () => {
           cancelPayment()
        });
    }
});



/*
   [Í≤∞Ï†ú ÏöîÏ≤≠ / Ïã§Ìå® ÏùëÎãµÍ∞í]

       KG Ï≤´Î≤àÏß∏ Í≤∞Ï†ú ÎÇ¥Ïó≠
       response = {
        "paymentId": "paymentId_01",
        "transactionType": "PAYMENT",
        "txId": "01936236-79f9-4bb2-27be-c7b3538a237f"
       }

       Toss ÎëêÎ≤àÏß∏ Í≤∞Ï†ú ÎÇ¥ÏòÅ
       response =  {
          "paymentId": "paymentId_02",
          "transactionType": "PAYMENT",
          "txId": "01936242-7003-5905-21ec-ed39908392f9"
       }

   {
      "paymentId": "paymentId_03",
      "transactionType": "PAYMENT",
      "txId": "01936373-da9d-9b32-a0d2-d55486d5bc9e"
  }
       KG Ï≤´Î≤àÏß∏ Í≤∞Ï†ú Ï∑®ÏÜå ÏùëÎãµÍ∞í
       "cancellation": {
           "status": "SUCCEEDED",
           "id": "01936281-ca0e-c38f-4367-928649272479",
           "pgCancellationId": "StdpayCARDINIpayTest20241125162629309690",
           "totalAmount": 1000,
           "taxFreeAmount": 0,
           "vatAmount": 91,
           "reason": "reason",
           "cancelledAt": "2024-11-25T08:48:13Z",
           "requestedAt": "2024-11-25T08:48:13Z",
           "receiptUrl": "https://iniweb.inicis.com/DefaultWebApp/mall/cr/cm/mCmReceipt_head.jsp?noTid=StdpayCARDINIpayTest20241125162629309690&noMethod=1",
           "trigger": "API"
           }
       }
*/

